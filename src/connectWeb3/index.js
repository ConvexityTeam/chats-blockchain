const {
  getName,
  getOwner,
  isOwner,
  isPaused,
  totalSupply,
  totalIssued,
  totalRedeemed,
  allowance,
  balanceOf,
  getUsersList,
  getAdminList,
  getAuthorizerList,
  getBlackListed,
  isUserListed,
  isAdmin,
  isAuthorizer,
  isBlackListed,
  // nft getter functions
  NFTgetName,
  NFTgetSymbol,
  NFTgetOwner,
  NFTgetBalance,
  NFTgetApproved,
  NFTgetTokenURI,
  NFTgetTotalMinted,
  NFTisApprovedForAll,
  getCollectionAddressByIndex,
  getCollectionNameByIndex,

  // escrow getter functions
  getFundAmount,
  getFundAvailability,
  getCampaignStatus,
  getTokenBalance,
  funderAvailable,
  WithdrawalApprovalStatus,
} = require("./getterAPIController");

const {
  addAdmin,
  removeAdmin,
  addAuthorizer,
  removeAuthorizer,
  addBlackList,
  removeBlackList,
  addUserList,
  removeUserList,
  createAccount,
  pause,
  unpause,
  initiateOwnershipTransfer,
  completeOwnershipTransfer,
  cancelOwnershipTransfer,
  setParams,
  approve,
  disApprove,
  transferAdmin,
  transfers,
  minting,
  redeeming,
  transferFrom,
  destroyBlackFunds,
  // nft setter functions
  mintNFT,
  burnNFT,
  NFTsetApprovalForAll,
  NFTapprove,
  NFTtransferFrom,
  setNFTlimit,
  deployCollection,

  // escrow
  deployEscrow,
  endCampaign,
  resumeCampaign,
  adminSignatory,
  updateDefaultStableCoin,
  updateErc20Token,
  adminWithdrawFunds
} = require("./setterAPIController");

module.exports = {
  allowance,
  balanceOf,
  getName,
  getOwner,
  getUsersList,
  getAdminList,
  getAuthorizerList,
  getBlackListed,
  totalSupply,
  totalIssued,
  totalRedeemed,
  isOwner,
  isPaused,
  isUserListed,
  isAdmin,
  isAuthorizer,
  isBlackListed,
  // nft getter functions
  NFTgetName,
  NFTgetSymbol,
  NFTgetOwner,
  NFTgetBalance,
  NFTgetApproved,
  NFTgetTokenURI,
  NFTgetTotalMinted,
  NFTisApprovedForAll,
  getCollectionAddressByIndex,
  getCollectionNameByIndex,

  addAdmin,
  createAccount,
  addAuthorizer,
  addBlackList,
  addUserList,
  removeAdmin,
  removeAuthorizer,
  removeBlackList,
  removeUserList,
  pause,
  unpause,
  initiateOwnershipTransfer,
  completeOwnershipTransfer,
  cancelOwnershipTransfer,
  setParams,
  approve,
  disApprove,
  transferAdmin,
  transfers,
  minting,
  redeeming,
  transferFrom,
  destroyBlackFunds,
  // nft setter functions
  mintNFT,
  burnNFT,
  NFTsetApprovalForAll,
  NFTapprove,
  NFTtransferFrom,
  setNFTlimit,
  deployCollection,

  //escrow
  deployEscrow,
  endCampaign,
  resumeCampaign,
  getFundAmount,
  getFundAvailability,
  getCampaignStatus,
  adminSignatory,
  getTokenBalance,
  updateDefaultStableCoin,
  updateErc20Token,
  funderAvailable,
  WithdrawalApprovalStatus,
  adminWithdrawFunds
};
